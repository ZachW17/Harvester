/*
 * public abstract class GameObject
 * @author Freddy Garcia
 * 
 * Version:
 *      $1.1.4$
 * 
 * Revisions:
 *      1.0.2: (Derrick Hunt)
 *          - Added properties to get and set x / y positions of object
 *      1.1.2: (Derrick Hunt)
 *          - Added a basic draw method for all game objects
 *      1.1.4: (Derrick Hunt)
 *          - Added properties to get width and height of the rectangle
 * 
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace Harvester
{
    /// <summary>
    /// Game objects that will be displayed on the screen.
    /// These objects do not move!
    /// 
    /// </summary>
    public abstract class GameObject 
    {
        // position of the object
        protected Rectangle objectPosition;
        // texture of the objcect
        protected Texture2D objectTexture;

        #region Properties
        /// <summary>
        /// The position of the object, as well as the width/height of the object.
        /// </summary>
        public Rectangle ObjectPosition
        {
            get { return objectPosition; }
            set { objectPosition = value; }
        }
        /// <summary>
        /// gets and sets the x position of the object's rectangle
        /// </summary>
        public int ObjectXPos
        {
            get { return objectPosition.X; }
            set { objectPosition.X = value; }
        }
        /// <summary>
        /// gets and sets the y position of the object's rectangle
        /// </summary>
        public int ObjectYPos
        {
            get { return objectPosition.Y; }
            set { objectPosition.Y = value; }
        }
        /// <summary>
        /// gets and sets the x position of the object's rectangle
        /// </summary>
        public int ObjectWidth
        {
            get { return objectPosition.Width; }
            set { objectPosition.Width = value; }
        }
        /// <summary>
        /// gets and sets the y position of the object's rectangle
        /// </summary>
        public int ObjectHeight
        {
            get { return objectPosition.Height; }
            set { objectPosition.Height = value; }
        }
        /// <summary>
        /// The texture of the object
        /// </summary>
        public Texture2D ObjectTexture
        {
            get { return objectTexture; }
            set { objectTexture = value; }
        }
        #endregion

        /// <summary>
        /// Creates a new game object, and sets the values of the position
        /// and texture of the object equal to the parameters
        /// </summary>
        /// <param name="objPos">Position and size of the object</param>
        /// <param name="objTexture">Texture of the object</param>
        public GameObject(Rectangle objPos, Texture2D objTexture)
        {
            objectPosition = objPos;
            objectTexture = objTexture;
        }

        /// <summary>
        /// Draws the game object
        /// </summary>
        /// <param name="texture">spritebatch object that draws the texture</param>
        public virtual void Draw(SpriteBatch spriteBatch)
        {
            spriteBatch.Draw(this.ObjectTexture, this.ObjectPosition, Color.White);
        }
    }
}
