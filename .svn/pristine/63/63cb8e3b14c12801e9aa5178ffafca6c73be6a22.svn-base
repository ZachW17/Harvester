/*
 * public abstract class Enemy : Ship
 * @author Freddy Garcia
 * 
 * Version:
 *      $1.0.0$
 * 
 * Revisions:
 * 
 * 
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace Harvester
{
    public abstract class Enemy : Ship
    {
        protected bool isActive;
        /// <summary>
        /// Creates a new enemy which will have position/size,
        /// texture, speed, health, and armor determined by parameters.
        /// </summary>
        /// <param name="objPos">The position/size of the enemy</param>
        /// <param name="objTexture">The texture of the enemy</param>
        /// <param name="objSpeed">The speed of the enemy</param>
        /// <param name="objHealth">The health of the enemy</param>
        /// <param name="objArmor">The armor of the enemy</param>
        public Enemy(Rectangle objPos, Texture2D objTexture, double objSpeed, double objHealth, double objArmor, Texture2D bulletTexture, bool active)
            : base(objPos, objTexture, objSpeed, objHealth, objArmor,bulletTexture)
        {
            isActive = active;
        }

        public bool IsActive
        {
            get { return isActive; }
            set { isActive = value; }
        }

        /// <summary>
        /// Fires the main weapon of the enemy
        /// </summary>
        public override void Fire()
        {
            throw new NotImplementedException();
        }
    }
}
