/*
 * public abstract class Ship : MovableGameObject
 * @author Freddy Garcia
 * 
 * Version:
 *      $1.0.2
 *     
 * 
 * Revisions:
 * 
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace Harvester
{
    /// <summary>
    /// Basic ship class. Will contain methods and attributes which both
    /// the player and the enemy ships will have in common.
    /// </summary>
    public abstract class Ship : MovableGameObject
    {
        // The amount of health that the ship currently has
        protected double currentHealth;
        // The maximum amount of health that the ship can have 
        protected double maxHealth;
        // The amount of armor that the ship has
        protected double armor;
        protected double damage;
        protected int frame = 0;
        protected int framesElapsed = 0;

        //the bullet texture
        protected Texture2D pBulletTexture;
        //the list of bullets
        protected List<PlayerBullet> bullets;

        //props
        

        #region Properties
        /// <summary>
        /// List of the bullets
        /// </summary>
        public List<PlayerBullet> Bullets
        {
            get { return bullets; }
            set { bullets = value; }
        }
        /// <summary>
        /// Health of the ship
        /// </summary>
        public double CurrentHealth
        {
            get { return currentHealth; }
            set { currentHealth = value; }
        }

        /// <summary>
        /// Armor of the ship
        /// </summary>
        public double Armor
        {
            get { return armor; }
            set { armor = value; }
        }
        #endregion

        /// <summary>
        /// Creates a new ship which will have position/size, 
        /// speed, and texture defined by the parameters
        /// <param name="objPos">Position and size of the ship</param>
        /// <param name="objTexture">Texture of the ship</param>
        /// <param name="objSpeed">Speed of the ship</param>
        /// </summary>
        /// <param name="objHealth">Health of the ship</param>
        /// <param name="objArmor">Armor of the ship</param>
        public Ship(Rectangle objPos, Texture2D objTexture, double objSpeed, double objHealth, double objArmor, Texture2D bulletTexture)
         : base(objPos, objTexture, objSpeed)
        {
            currentHealth = objHealth;
            armor = objArmor;
        }

        /// <summary>
        /// Fires the main weapon of the ship.
        /// TENTATIVE. will probably change
        /// </summary>
        public abstract void Fire();

        public void Explode(GameTime gameTime, SpriteBatch spriteBatch, Vector2 loc, Texture2D explosion)
        {
            framesElapsed = (int)(gameTime.TotalGameTime.TotalMilliseconds / 100);
            frame = framesElapsed % 5;

            spriteBatch.Draw(explosion, loc, new Rectangle(90 * frame, 0, 90, 90), Color.White);
        }
    }
}
