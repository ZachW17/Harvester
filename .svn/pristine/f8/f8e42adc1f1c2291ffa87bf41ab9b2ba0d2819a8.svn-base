/*
 * public abstract class LevelOne : Level
 * @author Freddy Garcia/Peter O'Neal/Derrick Hunt
 * 
 * Version:
 *      $1.5.1$
 * 
 * Revisions:
 *      1.1.0: (Derrick Hunt)
 *          - Added scrolling backgrounds
 *      1.1.1: (Peter O'Neal)
 *          - Code clean-up. Basic HUD added
 *      1.3.1: (Derrick Hunt)
 *          - Drew ship to screen and added movement controls
 *      1.5.1: (Not sure!)
 *          - Moved movement methods into Engine class
 * 
 */
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;

namespace Harvester
{
    public class LevelOne : Level
    {
        // no attributes
        Engine gameEngine;

        //no properties

        #region Constructor
        /// <summary>
        /// Constructs the LevelOne object
        /// </summary>
        /// <param name="theGame">the game engine</param>
        /// <param name="spriteBatch">the spritebatch for drawing</param>
        public LevelOne(Engine theGame, SpriteBatch spriteBatch)
            : base(theGame, spriteBatch)
        {
            // No other code neededd
            gameEngine = theGame;
        }
        #endregion

        #region Methods
        /// <summary>
        /// Initializes the LevelOne object
        /// </summary>
        public override void Initialize()
        {
            base.Initialize();
            //no extra code needed
        }

        /// <summary>
        /// Load all level specific textures, fonts and objects here
        /// </summary>
        protected override void LoadContent()
        {
            //load in background textures
            background1 = Game.Content.Load<Texture2D>(@"Level Backgrounds\LavaWorld1");
            background2 = Game.Content.Load<Texture2D>(@"Level Backgrounds\LavaWorld2");
            background3 = Game.Content.Load<Texture2D>(@"Level Backgrounds\LavaWorld3");
            background4 = Game.Content.Load<Texture2D>(@"Level Backgrounds\LavaWorld4");

            //create Background objects and add to background array
            backgrounds[0] = new Background(new Rectangle(0, 0, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height), background1);
            backgrounds[1] = new Background(new Rectangle(0, -GraphicsDevice.Viewport.Height, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height), background2);
            backgrounds[2] = new Background(new Rectangle(0, -GraphicsDevice.Viewport.Height * 2, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height), background3);
            backgrounds[3] = new Background(new Rectangle(0, -GraphicsDevice.Viewport.Height * 3, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height), background4);

            base.LoadContent();
        }

        /// <summary>
        /// Updates all the objects used by LevelOne
        /// </summary>
        /// <param name="gameTime">the gametime</param>
        public override void Update(GameTime gameTime)
        {
            base.Update(gameTime);//updates the background, ships, and HUD

            //get input to fire bullets
            MouseState mouseState = Mouse.GetState();
            if (mouseState.LeftButton == ButtonState.Pressed)
            {
                player.Fire();
            }

            KeyboardState kbState = Keyboard.GetState();
            if (kbState.IsKeyDown(Keys.Escape))
            {
                gameEngine.CurrentState = Gamestate.GamePause;
            }

            //update bullet pos
            player.UpdatePlayerBullets();

            if (player.CurrentHealth <= 0)
            {
                gameEngine.CurrentPlayer = player;
                gameEngine.CurrentState = Gamestate.GameOver;
            }

        }

        /// <summary>
        /// Draws the level
        /// </summary>
        /// <param name="gameTime">the gametime</param>
        /// <param name="spriteBatch">the spritebatch for drawing</param>
        public override void Draw(GameTime gameTime, SpriteBatch spriteBatch)
        {
            base.Draw(gameTime, spriteBatch);//draws the background, ships, and HUD
        }
        #endregion
    }
}
